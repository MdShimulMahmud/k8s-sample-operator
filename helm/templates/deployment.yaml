apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
    type: frontend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: frontend
      type: frontend
  template:
    metadata:
      labels:
        app: frontend
        type: frontend
    spec:
      containers:
      - name: frontend-container
        image: {{ .Values.frontend.image }}
        ports:
        - containerPort: {{ .Values.frontend.port }}

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
    type: backend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: backend
      type: backend
  template:
    metadata:
      labels:
        app: backend
        type: backend
    spec:
      containers:
      - name: backend-conatiner
        image: {{ .Values.backend.image }}
        ports:
        - containerPort: {{ .Values.backend.port }}
        volumeMounts:
          - mountPath: /app/logs/
            name: access-log-volume
            # subPath: access.log
        env:
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: password
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: username
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                name: configmap
                key: database
      volumes:
        - name: access-log-volume
          persistentVolumeClaim:
            claimName: test-claim
